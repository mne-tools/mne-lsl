[build-system]
build-backend = 'setuptools.build_meta'
requires = ['setuptools >= 64.0.0']

[project]
authors = [
  {email = 'mathieu.scheltienne@fcbg.ch', name = 'Mathieu Scheltienne'},
]
classifiers = [
  'Intended Audience :: Developers',
  'Intended Audience :: Science/Research',
  'License :: OSI Approved :: BSD License',
  'Natural Language :: English',
  'Operating System :: MacOS',
  'Operating System :: Microsoft :: Windows',
  'Operating System :: Unix',
  'Programming Language :: Python :: 3 :: Only',
  'Programming Language :: Python :: 3.10',
  'Programming Language :: Python :: 3.11',
  'Programming Language :: Python :: 3.12',
  'Programming Language :: Python :: 3.9',
  'Topic :: Scientific/Engineering',
  'Topic :: Software Development',
]
dependencies = [
  'distro; sys_platform == "linux"',
  'mne>=1.4.2',
  'numpy>=1.21',
  'packaging',
  'pooch',
  'psutil',
  'pyqtgraph',
  'qtpy',
  'requests',
  'scipy',
]
description = 'Real-time framework integrated with MNE-Python for online neuroscience research through LSL-compatible devices.'
keywords = [
  'brain',
  'EEG',
  'eeg',
  'electroencephalography',
  'labstreaminglayer',
  'LSL',
  'neuroimaging',
  'neuroscience',
  'python',
  'real-time',
]
license = {file = 'LICENSE'}
maintainers = [
  {email = 'mathieu.scheltienne@fcbg.ch', name = 'Mathieu Scheltienne'},
]
name = 'mne_lsl'
readme = 'README.md'
requires-python = '>=3.9'
version = '1.1.1'

[project.optional-dependencies]
all = [
  'mne_lsl[build]',
  'mne_lsl[doc]',
  'mne_lsl[style]',
  'mne_lsl[test]',
]
build = [
  'build',
  'twine',
]
doc = [
  'furo',
  'matplotlib',
  'memory-profiler',
  'numpydoc',
  'pyqt5',
  'sphinx!=7.2.*',
  'sphinx-copybutton',
  'sphinx-design',
  'sphinx-gallery',
  'sphinx-issues',
  'sphinxcontrib-bibtex',
]
full = [
  'mne_lsl[all]',
]
style = [
  'bibclean',
  'black',
  'codespell',
  'isort',
  'pydocstyle[toml]',
  'ruff',
  'toml-sort',
  'yamllint',
]
test = [
  'pyqt5',
  'pytest-cov',
  'pytest-timeout',
  'pytest>=6.0',
  'requests',
]

[project.scripts]
mne_lsl-sys_info = 'mne_lsl.commands.sys_info:run'
mne_lsl_player = 'mne_lsl.commands.mne_lsl_player:run'
mne_lsl_stream_viewer = 'mne_lsl.commands.mne_lsl_stream_viewer:run'

[project.urls]
documentation = 'https://mne.tools/mne-lsl'
homepage = 'https://mne.tools/mne-lsl'
source = 'https://github.com/mne-tools/mne-lsl'
tracker = 'https://github.com/mne-tools/mne-lsl/issues'

[tool.black]
extend-exclude = '''
(
      __pycache__
    | \.github
    | doc/
    | pyproject.toml
    | setup.py
    | tutorials/
)
'''
include = '\.pyi?$'
line-length = 88
target-version = ['py39']

[tool.coverage.report]
exclude_lines = [
  'if __name__ == .__main__.:',
  'if TYPE_CHECKING:',
  'pragma: no cover',
]
omit = [
  '**/mne_lsl/stream_viewer/*',
]
precision = 2

[tool.coverage.run]
branch = true
cover_pylib = false
omit = [
  '**/__init__.py',
  '**/mne_lsl/_typing.py',
  '**/mne_lsl/_version.py',
  '**/mne_lsl/commands/*',
  '**/mne_lsl/conftest.py',
  '**/mne_lsl/utils/_fixes.py',
  '**/mne_lsl/utils/_tests.py',
  '**/tests/**',
]

[tool.isort]
extend_skip_glob = [
  '.github/*',
  'doc/*',
  'pyproject.toml',
  'setup.py',
  'tutorials/*',
]
line_length = 88
multi_line_output = 3
profile = 'black'
py_version = 39

[tool.pydocstyle]
add_ignore = 'D100,D104,D107'
convention = 'numpy'
ignore-decorators = '(copy_doc|property|.*setter|.*getter|pyqtSlot|Slot)'
match = '^(?!setup|__init__|test_).*\.py'
match-dir = '^mne_lsl.*'

[tool.pytest.ini_options]
addopts = '--durations=20 --junit-xml=junit-results.xml -ra -v --cov-report= --tb=short --color=yes'
junit_family = 'xunit2'
minversion = '6.0'

[tool.ruff]
extend-exclude = [
  '.github/*',
  'doc/*',
  'pyproject.toml',
  'setup.py',
  'tutorials/*',
]
line-length = 88

[tool.ruff.per-file-ignores]
'__init__.py' = ['F401']

[tool.setuptools]
include-package-data = false

[tool.setuptools.package-data]
'mne_lsl.datasets' = ['*registry.txt']
'mne_lsl.stream_viewer.control_gui.settings' = ['*.ini']

[tool.setuptools.packages.find]
exclude = ['mne_lsl*tests']
include = ['mne_lsl*']

[tool.tomlsort]
all = true
ignore_case = true
trailing_comma_inline_array = true
