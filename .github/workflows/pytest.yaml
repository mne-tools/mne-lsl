name: pytest
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}-${{ github.event.ref }}
  cancel-in-progress: true
on:  # yamllint disable-line rule:truthy
  pull_request:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  pytest:
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
        python-version: [3.9, "3.10", "3.11", "3.12"]
    name: ${{ matrix.os }} - py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install system dependencies
        uses: ./.github/actions/install-system-dependencies
      - name: Install package
        run: |
          python -m pip install --progress-bar off --upgrade pip setuptools
          python -m pip install --progress-bar off .[test]
      - name: Display system information
        run: mne_lsl-sys_info --developer
      - name: Get testing dataset
        uses: ./.github/actions/get-testing-dataset
      - name: Run pytest
        run: pytest mne_lsl --cov=mne_lsl --cov-report=xml --cov-config=pyproject.toml -s
        env:
          MNE_LSL_LOG_LEVEL: DEBUG
      - name: Upload to codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          flags: unittests  # optional
          name: codecov-umbrella  # optional
          fail_ci_if_error: false  # optional (default = false)
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true  # optional (default = false)

  pytest-pip-pre:
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
    name: pip pre-release - py${{ matrix.python-version }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install system dependencies
        uses: ./.github/actions/install-system-dependencies
      - name: Install package
        run: |
          python -m pip install --progress-bar off --upgrade pip setuptools
          python -m pip install --progress-bar off .[test]
          python -m pip install --progress-bar off --upgrade git+https://github.com/mne-tools/mne-python
          python -m pip install matplotlib
          python -m pip install --progress-bar off --upgrade --no-deps --pre --only-binary :all: -i https://pypi.anaconda.org/scientific-python-nightly-wheels/simple --timeout=180 matplotlib
          python -m pip install --progress-bar off --upgrade --pre --only-binary :all: -i https://pypi.anaconda.org/scientific-python-nightly-wheels/simple --timeout=180 numpy scipy
      - name: Display system information
        run: mne_lsl-sys_info --developer
      - name: Get testing dataset
        uses: ./.github/actions/get-testing-dataset
      - name: Run pytest
        run: pytest mne_lsl --cov=mne_lsl --cov-report=xml --cov-config=pyproject.toml -s
        env:
          MNE_LSL_LOG_LEVEL: DEBUG
      - name: Upload to codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          flags: unittests  # optional
          name: codecov-umbrella  # optional
          fail_ci_if_error: false  # optional (default = false)
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true  # optional (default = false)

  pytest-compat:
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        mne-version: ["1.4.2", "1.5.0"]
        python-version: [3.9]
    name: mne compat ${{ matrix.mne-version }} - py${{ matrix.python-version }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install system dependencies
        uses: ./.github/actions/install-system-dependencies
      - name: Install package
        run: |
          python -m pip install --progress-bar off --upgrade pip setuptools
          python -m pip install --progress-bar off .[test]
          python -m pip uninstall mne -y
          python -m pip install --progress-bar off mne==${{ matrix.mne-version }}
      - name: Display system information
        run: mne_lsl-sys_info --developer
      - name: Get testing dataset
        uses: ./.github/actions/get-testing-dataset
      - name: Run pytest
        run: pytest mne_lsl --cov=mne_lsl --cov-report=xml --cov-config=pyproject.toml -s
        env:
          MNE_LSL_LOG_LEVEL: DEBUG
      - name: Upload to codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          flags: unittests  # optional
          name: codecov-umbrella  # optional
          fail_ci_if_error: false  # optional (default = false)
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true  # optional (default = false)
