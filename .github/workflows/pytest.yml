name: pytest
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}-${{ github.event.ref }}
  cancel-in-progress: true
on:
  pull_request:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  pytest:
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
        python-version: [3.9, "3.10", "3.11"]
    name: ${{ matrix.os }} - py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'
      - name: Install linux dependencies
        if: ${{ matrix.os == 'ubuntu' }}
        run: |
          sudo apt update
          sudo apt install -y libpugixml-dev qtbase5-dev qt5-qmake
      - name: Install dependencies
        run: |
          python -m pip install --progress-bar off --upgrade pip setuptools wheel
          python -m pip install --progress-bar off .[test]
      - name: Display system information
        run: bsl-sys_info --developer
      - name: Run pytest
        run: pytest bsl --cov=bsl --cov-report=xml --cov-config=pyproject.toml
      - name: Upload to codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml
          flags: unittests # optional
          name: codecov-umbrella # optional
          fail_ci_if_error: false # optional (default = false)
          verbose: true # optional (default = false)

  pytest-pip-pre:
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9, "3.10", "3.11"]
    name: pip pre-release - py${{ matrix.python-version }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'
      - name: Install linux dependencies
        run: |
          sudo apt update
          sudo apt install -y libpugixml-dev qtbase5-dev qt5-qmake
      - name: Install dependencies
        run: |
          python -m pip install --progress-bar off --upgrade pip setuptools wheel
          python -m pip install --progress-bar off --pre --only-binary :all: -i https://pypi.anaconda.org/scientific-python-nightly-wheels/simple numpy scipy
          python -m pip install --progress-bar off git+https://github.com/mne-tools/mne-python
          python -m pip install --progress-bar off .[test]
      - name: Display system information
        run: bsl-sys_info --developer
      - name: Run pytest
        run: pytest bsl --cov=bsl --cov-report=xml --cov-config=pyproject.toml
      - name: Upload to codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml
          flags: unittests # optional
          name: codecov-umbrella # optional
          fail_ci_if_error: false # optional (default = false)
          verbose: true # optional (default = false)
